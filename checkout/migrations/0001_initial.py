# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-06 17:36
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('user_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SiteAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.IntegerField()),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Site')),
            ],
        ),
        migrations.CreateModel(
            name='SKU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_identifier', models.CharField(max_length=200)),
                ('shortname', models.CharField(max_length=200)),
                ('total_units', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TeachingTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Site')),
                ('team', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TechnologyAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.IntegerField()),
                ('date', models.DateField()),
                ('period', models.IntegerField(choices=[(1, b'Period 1'), (2, b'Period 2'), (3, b'Period 3'), (4, b'Period 4'), (5, b'Activity 1h'), (6, b'Activity 2h')])),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Classroom')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Site')),
                ('teachers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.TeachingTeam')),
                ('technology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.SiteAssignment')),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days', models.ManyToManyField(to='checkout.Day')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Site')),
            ],
        ),
        migrations.AddField(
            model_name='siteassignment',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.SKU'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkout.Site'),
        ),
        migrations.AddField(
            model_name='user',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='checkout.Site'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
